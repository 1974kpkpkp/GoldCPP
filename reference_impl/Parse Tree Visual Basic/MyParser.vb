'Generated by the GOLD Parser Builder

Option Explicit On
Option Strict Off

Imports System.IO

Module MyParser
    Private Parser As New GOLD.Parser

    Public Root As GOLD.Reduction   'Store the top of the tree
    Public FailMessage As String

    Public Function Setup(ByVal FilePath As String) As Boolean
        Return Parser.LoadTables(FilePath)
    End Function

    Public Function Parse(ByVal Reader As TextReader) As Boolean
        'This procedure starts the GOLD Parser Engine and handles each of the
        'messages it returns. Each time a reduction is made, you can create new
        'custom object and reassign the .CurrentReduction property. Otherwise, 
        'the system will use the Reduction object that was returned.
        '
        'The resulting tree will be a pure representation of the language 
        'and will be ready to implement.

        Dim Response As GOLD.ParseMessage
        Dim Done As Boolean             'Controls when we leave the loop
        Dim Accepted As Boolean = False 'Was the parse successful?

        Parser.Open(Reader)
        Parser.TrimReductions = False  'Please read about this feature before enabling  

        Done = False
        Do Until Done
            Response = Parser.Parse()

            Select Case Response
                Case GOLD.ParseMessage.LexicalError
                    'Cannot recognize token
                    FailMessage = "Lexical Error:" & vbNewLine & _
                                  "Position: " & Parser.CurrentPosition.Line & ", " & Parser.CurrentPosition.Column & vbNewLine & _
                                  "Read: " & Parser.CurrentToken.Data

                    Done = True

                Case GOLD.ParseMessage.SyntaxError
                    'Expecting a different token
                    FailMessage = "Syntax Error:" & vbNewLine & _
                                  "Position: " & Parser.CurrentPosition.Line & ", " & Parser.CurrentPosition.Column & vbNewLine & _
                                  "Read: " & Parser.CurrentToken.Data & vbNewLine & _
                                  "Expecting: " & Parser.ExpectedSymbols.Text

                    Done = True

                Case GOLD.ParseMessage.Reduction
                    'For this project, we will let the parser build a tree of Reduction objects
                    '.CurrentReduction = CreateNewObject(.CurrentReduction)

                Case GOLD.ParseMessage.Accept
                    'Accepted!
                    Root = Parser.CurrentReduction  'The root node!                 
                    Done = True
                    Accepted = True

                Case GOLD.ParseMessage.TokenRead
                    'You don't have to do anything here.

                Case GOLD.ParseMessage.InternalError
                    'INTERNAL ERROR! Something is horribly wrong.
                    Done = True

                Case GOLD.ParseMessage.NotLoadedError
                    'This error occurs if the CGT was not loaded.                   
                    FailMessage = "Tables not loaded"
                    Done = True

                Case GOLD.ParseMessage.GroupError
                    'GROUP ERROR! Unexpected end of file
                    Done = True
                    FailMessage = "Runaway group"
            End Select
        Loop

        Return Accepted
    End Function
End Module
